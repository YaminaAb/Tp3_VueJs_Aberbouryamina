{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createCommentVNode(\" <footer className=\\\"bg-primary bg-opacity-25 d-flex justify-content-center pt-2 \\\">\\n      <p>Copyright &copy; 2022</p>\\n    </footer> \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_router_view, {\n    inventory: $data.inventory,\n    addInv: $options.addInventory,\n    removeInv: $options.removeInventory,\n    updateInv: $options.updateInventory\n  }, null, 8 /* PROPS */, [\"inventory\", \"addInv\", \"removeInv\", \"updateInv\"]), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAMEA,oBAIM,2BAHJC,+JAEa;;;;6DAPfC,aAG+BC;IAHjBC,SAAS,EAAEC,eAAS;IACjCC,MAAM,EAAEC,qBAAY;IACpBC,SAAS,EAAED,wBAAe;IAC1BE,SAAS,EAAEF;8EACZG,UAIM","names":["_createElementVNode","_createCommentVNode","_createVNode","_component_router_view","inventory","$data","addInv","$options","removeInv","updateInv","_hoisted_1"],"sourceRoot":"","sources":["C:\\wamp64\\www\\MesTraveaux\\vue-cli\\client-vue\\src\\App.vue"],"sourcesContent":["<template>\n\n  <router-view :inventory=\"inventory\" \n  :addInv=\"addInventory\" \n  :removeInv=\"removeInventory\" \n  :updateInv=\"updateInventory\" />\n  <div>\n    <!-- <footer className=\"bg-primary bg-opacity-25 d-flex justify-content-center pt-2 \">\n      <p>Copyright &copy; 2022</p>\n    </footer> -->\n  </div>\n</template>\n\n<script>\nimport ProductDataService from '@/services/ProductDataService'\nexport default {\n  data() {\n    return {\n      inventory: []\n    }\n  },\n  methods: {\n    addInventory(data) {\n      this.inventory.push(data)\n    },\n    removeInventory(index) {\n      this.inventory.splice(index, 1)\n    },\n    updateInventory(index, data) {\n      this.inventory[index].name = data.name\n      this.inventory[index].photo = data.photo\n      this.inventory[index].price = data.price\n      this.inventory[index].description = data.description\n      this.inventory[index].type = data.type\n    }\n  },\n  mounted() {\n    ProductDataService.getAll()\n      .then(response => {\n        this.inventory = response.data\n        console.log(response.data)\n      })\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}