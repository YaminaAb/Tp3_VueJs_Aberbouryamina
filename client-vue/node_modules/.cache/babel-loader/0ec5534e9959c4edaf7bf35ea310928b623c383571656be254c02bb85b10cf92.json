{"ast":null,"code":"export default {\n  props: ['toggle', 'cart', 'inventory', 'remove'],\n  methods: {\n    getPrice(name) {\n      const product = this.inventory.find(p => {\n        return p.name === name;\n      });\n      return product.price.toFixed(2);\n    },\n    getPhoto(name) {\n      const product = this.inventory.find(p => {\n        return p.name === name;\n      });\n      return product.photo;\n    },\n    calculateTotal() {\n      const total = Object.entries(this.cart).reduce((acc, curr) => {\n        return acc + curr[1] * this.getPrice(curr[0]);\n      }, 0);\n      return total.toFixed(2);\n    }\n  }\n};","map":{"version":3,"mappings":"AAgDA,eAAe;EACbA,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC;EAChDC,OAAO,EAAE;IACPC,QAAO,CAAGC,IAAI,EAAE;MACd,MAAMC,OAAM,GAAI,IAAI,CAACC,SAAS,CAACC,IAAI,CAAEC,CAAC,IAAK;QACzC,OAAOA,CAAC,CAACJ,IAAG,KAAMA,IAAG;MACvB,CAAC;MACD,OAAOC,OAAO,CAACI,KAAK,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC;IACDC,QAAO,CAAGP,IAAI,EAAE;MACd,MAAMC,OAAM,GAAI,IAAI,CAACC,SAAS,CAACC,IAAI,CAAEC,CAAC,IAAK;QACzC,OAAOA,CAAC,CAACJ,IAAG,KAAMA,IAAG;MACvB,CAAC;MACD,OAAOC,OAAO,CAACO,KAAI;IACrB,CAAC;IACDC,cAAa,GAAK;MAChB,MAAMC,KAAI,GAAIC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACC,IAAI,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;QAAE,OAAOD,GAAE,GAAKC,IAAI,CAAC,CAAC,IAAI,IAAI,CAACjB,QAAQ,CAACiB,IAAI,CAAC,CAAC,CAAC,CAAC;MAAE,CAAC,EAAE,CAAC;MACpH,OAAON,KAAK,CAACJ,OAAO,CAAC,CAAC;IACxB;EACF;AACF","names":["props","methods","getPrice","name","product","inventory","find","p","price","toFixed","getPhoto","photo","calculateTotal","total","Object","entries","cart","reduce","acc","curr"],"sourceRoot":"","sources":["C:\\wamp64\\www\\MesTraveaux\\vue-cli\\client-vue\\src\\components\\SideBar.vue"],"sourcesContent":["<template>\r\n    <aside class=\"cart-container\">\r\n        <div class=\"cart\">\r\n            <h1 class=\"cart-title spread\">\r\n                <span>\r\n                    Cart\r\n                    <i class=\"bi-cart-fill me-1\"></i>\r\n                </span>\r\n                <button class=\"cart-close\" @click=\"toggle\">&times;</button>\r\n            </h1>\r\n            <div class=\"cart-body\">\r\n                <table class=\"cart-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><span class=\"sr-only\">Product Image</span></th>\r\n                            <th>Product</th>\r\n                            <th>Price</th>\r\n                            <th>Qty</th>\r\n                            <th>Total</th>\r\n                            <th><span class=\"sr-only\">Actions</span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(quantity, key, i) in cart\" :key=\"i\">\r\n                            <td><img :src=\"('./img/100/'+getPhoto (key))\" alt=\"...\" /></td>\r\n                            <td> {{ key }}</td>\r\n                            <td>$ {{ getPrice(key)}}</td>\r\n                            <td class=\"center\">{{ quantity }}</td>\r\n                            <td>${{ (quantity*getPrice(key)).toFixed(2) }}</td>\r\n                            <td class=\"center\">\r\n                                <button class=\"btn btn-light cart-remove\"  @click=\"remove(key)\">\r\n                                    &times;\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <p class=\"center\" v-if=\"!Object.keys(cart).length\"><em>No items in cart</em></p>\r\n                <div class=\"spread\">\r\n                    <span><strong>Total:</strong> ${{ calculateTotal() }}</span>\r\n                    <button class=\"btn btn-light\">Checkout</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['toggle', 'cart', 'inventory', 'remove'],\r\n  methods: {\r\n    getPrice (name) {\r\n      const product = this.inventory.find((p) => {\r\n        return p.name === name\r\n      })\r\n      return product.price.toFixed(2)\r\n    },\r\n    getPhoto (name) {\r\n      const product = this.inventory.find((p) => {\r\n        return p.name === name\r\n      })\r\n      return product.photo\r\n    },\r\n    calculateTotal () {\r\n      const total = Object.entries(this.cart).reduce((acc, curr) => { return acc + (curr[1] * this.getPrice(curr[0])) }, 0)\r\n      return total.toFixed(2)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}